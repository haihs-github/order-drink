// check login
document.addEventListener('DOMContentLoaded', function () {
	const loginButtonsDiv = document.getElementById('login-buttons');
	const userInfoDiv = document.getElementById('user-info');
	const usernameDisplaySpan = document.getElementById('username-display');
	const logoutButton = document.getElementById('logout-button');
	// h√†m gi·∫£i m√£ token
	function decodeJwt(token) {
		try {
			const base64Url = token.split('.')[1];
			const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
			const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
				return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
			}).join(''));
			return JSON.parse(jsonPayload);
		} catch (error) {
			console.error("L·ªói gi·∫£i m√£ token:", error);
			return null;
		}
	}
	// H√†m ki·ªÉm tra xem token c√≥ t·ªìn t·∫°i trong Local Storage hay kh√¥ng
	function checkLoginStatus() {
		const authToken = localStorage.getItem('authToken');
		if (authToken) {
			const data = decodeJwt(authToken)
			console.log("data", data)
			const loggedInUsername = data.username || 'Ng∆∞·ªùi d√πng';
			//protected routes
			// ·∫®n n√∫t ƒëƒÉng nh·∫≠p/ƒëƒÉng k√Ω
			loginButtonsDiv.style.display = 'none';
			// Hi·ªÉn th·ªã th√¥ng tin ng∆∞·ªùi d√πng v√† n√∫t ƒëƒÉng xu·∫•t
			usernameDisplaySpan.textContent = loggedInUsername;
			usernameDisplaySpan.onclick = function () {
				// Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang c√° nh√¢n
				window.location.href = 'thongtincanhan.html';
			}
			userInfoDiv.style.display = 'flex'; // S·ª≠ d·ª•ng flex ƒë·ªÉ c√°c ph·∫ßn t·ª≠ n·∫±m tr√™n c√πng m·ªôt d√≤ng
			userInfoDiv.style.alignItems = 'center'; // CƒÉn gi·ªØa theo chi·ªÅu d·ªçc
		} else {
			// N·∫øu kh√¥ng c√≥ token, hi·ªÉn th·ªã n√∫t ƒëƒÉng nh·∫≠p/ƒëƒÉng k√Ω
			loginButtonsDiv.style.display = 'flex';
			// ·∫®n th√¥ng tin ng∆∞·ªùi d√πng v√† n√∫t ƒëƒÉng xu·∫•t
			userInfoDiv.style.display = 'none';
			if (confirm("Y√™u c·∫ßu ƒëƒÉng nh·∫≠p ƒë·ªÉ ƒë·∫∑t h√†ng")) {
				window.location.href = "dangnhap.html"
			} else {
				window.history.back()
			}
		}
	}

	// G·ªçi h√†m ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p khi trang ƒë∆∞·ª£c t·∫£i
	checkLoginStatus();

	// X·ª≠ l√Ω s·ª± ki·ªán click cho n√∫t ƒëƒÉng xu·∫•t
	logoutButton.addEventListener('click', function () {
		// X√≥a token v√† th√¥ng tin ng∆∞·ªùi d√πng kh·ªèi Local Storage
		localStorage.removeItem('authToken');
		localStorage.removeItem('loggedInUsername'); // N·∫øu b·∫°n l∆∞u username

		// G·ªçi l·∫°i h√†m ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p ƒë·ªÉ c·∫≠p nh·∫≠t giao di·ªán
		checkLoginStatus();

		// Chuy·ªÉn h∆∞·ªõng ng∆∞·ªùi d√πng v·ªÅ trang ƒëƒÉng nh·∫≠p (t√πy ch·ªçn)
		window.location.href = 'dangnhap.html';
	});
});

document.addEventListener('DOMContentLoaded', () => {
	const cartData = JSON.parse(localStorage.getItem('cart')) || [];
	const orderSummary = document.querySelector('.order-summary');
	const totalSection = orderSummary.querySelector('.total-section');

	// X√≥a c√°c m·ª•c ƒë∆°n h√†ng c≈© n·∫øu c√≥
	const oldItems = orderSummary.querySelectorAll('.order-item');
	oldItems.forEach(item => item.remove());

	let subtotal = 0;

	cartData.forEach(item => {
		const { name, note, quantity, price, src } = item;
		const total = price * quantity;
		subtotal += total;

		const orderItem = document.createElement('div');
		orderItem.classList.add('order-item');
		orderItem.innerHTML = `
              <div class="item-info">
                <p>${name}</p>
                <p>${note} (SL: ${quantity})</p>
                <p><strong>${total.toLocaleString('vi-VN')} VNƒê</strong></p>
              </div>
            `;
		orderSummary.insertBefore(orderItem, totalSection);
	});

	// C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
	const shippingFee = 0;
	const grandTotal = subtotal + shippingFee;

	totalSection.innerHTML = `
            <p><span>S·ªë ti·ªÅn</span> <span>${subtotal.toLocaleString('vi-VN')} VNƒê</span></p>
            <p><span>Ph√≠ v·∫≠n chuy·ªÉn</span> <span>${shippingFee.toLocaleString('vi-VN')} VNƒê</span></p>
            <p><span>H√¨nh th·ª©c thanh to√°n</span> <span>Thanh to√°n khi nh·∫≠n h√†ng</span></p>
            <p><strong>T·ªïng thanh to√°n</strong> <strong>${grandTotal.toLocaleString('vi-VN')} VNƒê</strong></p>
          `;
});
// x·ª≠ l√≠ n√∫t x√°c nh·∫≠n ƒë·∫∑t h√†ng
document.querySelector('.btn-confirm-order').addEventListener('click', function (e) {
	e.preventDefault(); // NgƒÉn form g·ª≠i t·ª± ƒë·ªông

	// L·∫•y th√¥ng tin t·ª´ form
	const nameInput = document.getElementById('name');
	const phoneInput = document.getElementById('phone');
	const emailInput = document.getElementById('email');
	const addressInput = document.getElementById('address');
	const noteInput = document.getElementById('note');

	const name = nameInput.value.trim();
	const phone = phoneInput.value.trim();
	const email = emailInput.value.trim();
	const address = addressInput.value.trim();
	const note = noteInput.value.trim();

	// Regex ki·ªÉm tra
	const phoneRegex = /^(0|\+84)\d{9}$/;
	const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

	// Ki·ªÉm tra h·ª£p l·ªá
	if (!name) {
		alert("Vui l√≤ng nh·∫≠p h·ªç v√† t√™n.");
		nameInput.focus();
		return;
	}

	if (!phoneRegex.test(phone)) {
		alert("Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i h·ª£p l·ªá (VD: 0981234567).");
		phoneInput.focus();
		return;
	}

	if (!emailRegex.test(email)) {
		alert("Vui l√≤ng nh·∫≠p email h·ª£p l·ªá.");
		emailInput.focus();
		return;
	}

	if (!address) {
		alert(" Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ giao h√†ng.");
		addressInput.focus();
		return;
	}

	// Ki·ªÉm tra ƒëƒÉng nh·∫≠p
	const authToken = localStorage.getItem('authToken');
	if (!authToken) {
		alert('B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p. Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ ƒë·∫∑t h√†ng.');
		window.location.href = 'dangnhap.html';
		return;
	}

	// Gi·∫£i m√£ JWT
	let userId = null;
	function decodeJwt(token) {
		try {
			const base64Url = token.split('.')[1];
			const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
			const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
				return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
			}).join(''));
			return JSON.parse(jsonPayload);
		} catch (error) {
			console.error("L·ªói gi·∫£i m√£ token:", error);
			return null;
		}
	}

	const tokenData = decodeJwt(authToken);
	if (!tokenData || !tokenData.userId) {
		alert('L·ªói x√°c th·ª±c. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.');
		return;
	}
	userId = tokenData.userId;

	// L·∫•y gi·ªè h√†ng
	const cartData = JSON.parse(localStorage.getItem('cart')) || [];
	if (cartData.length === 0) {
		alert('Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.');
		return;
	}

	// T·∫°o ƒë∆°n h√†ng
	const orderData = {
		user_id: userId,
		fullname: name,
		email: email,
		phone_number: phone,
		address: address,
		content: note,
		status: 'ƒêang ch·ªù x·ª≠ l√Ω',
		order_details: cartData,
	};

	console.log('Order data:', orderData);

	// G·ª≠i ƒë∆°n h√†ng
	fetch('http://localhost:5000/api/orders', {
		method: 'POST',
		headers: {
			'Content-Type': 'application/json',
			'Authorization': `Bearer ${authToken}`
		},
		body: JSON.stringify(orderData)
	})
		.then(response => {
			if (!response.ok) {
				throw new Error(`L·ªói HTTP: ${response.status}`);
			}
			return response.json();
		})
		.then(data => {
			alert('üéâ ƒê·∫∑t h√†ng th√†nh c√¥ng!');
			localStorage.removeItem('cart');
			window.location.href = 'sanpham.html';
		})
		.catch(error => {
			console.error('L·ªói khi ƒë·∫∑t h√†ng:', error);
			alert('C√≥ l·ªói x·∫£y ra khi g·ª≠i ƒë∆°n h√†ng. Vui l√≤ng th·ª≠ l·∫°i sau.');
		});
});


document.querySelector('.btn-cancel-order').addEventListener('click', () => {
	// Th·ª±c hi·ªán h√†nh ƒë·ªông h·ªßy ƒë·∫∑t h√†ng
	if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën h·ªßy ƒë∆°n h√†ng kh√¥ng?')) {
		// X√≥a d·ªØ li·ªáu gi·ªè h√†ng v√† l√†m m·ªõi trang
		localStorage.removeItem('cart');
		window.location.href = 'sanpham.html'; // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang ƒëƒÉng nh·∫≠p

	}
});

